{"version":3,"file":"InstallView-C1fnMZKt.js","sources":["../../src/components/install/DesktopSettingsConfiguration.vue","../../../../../../assets/images/nvidia-logo.svg","../../../../../../assets/images/apple-mps-logo.png","../../../../../../assets/images/manual-configuration.svg","../../src/components/install/GpuPicker.vue","../../src/components/install/InstallLocationPicker.vue","../../src/components/install/MigrationPicker.vue","../../src/views/InstallView.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col gap-6 w-[600px]\">\n    <div class=\"flex flex-col gap-4\">\n      <h2 class=\"text-2xl font-semibold text-neutral-100\">\n        {{ $t('install.desktopAppSettings') }}\n      </h2>\n\n      <p class=\"text-neutral-400 my-0\">\n        {{ $t('install.desktopAppSettingsDescription') }}\n      </p>\n    </div>\n\n    <div class=\"flex flex-col bg-neutral-800 p-4 rounded-lg\">\n      <!-- Auto Update Setting -->\n      <div class=\"flex items-center gap-4\">\n        <div class=\"flex-1\">\n          <h3 class=\"text-lg font-medium text-neutral-100\">\n            {{ $t('install.settings.autoUpdate') }}\n          </h3>\n          <p class=\"text-sm text-neutral-400 mt-1\">\n            {{ $t('install.settings.autoUpdateDescription') }}\n          </p>\n        </div>\n        <ToggleSwitch v-model=\"autoUpdate\" />\n      </div>\n\n      <Divider />\n\n      <!-- Metrics Collection Setting -->\n      <div class=\"flex items-center gap-4\">\n        <div class=\"flex-1\">\n          <h3 class=\"text-lg font-medium text-neutral-100\">\n            {{ $t('install.settings.allowMetrics') }}\n          </h3>\n          <p class=\"text-sm text-neutral-400 mt-1\">\n            {{ $t('install.settings.allowMetricsDescription') }}\n          </p>\n          <a\n            href=\"#\"\n            class=\"text-sm text-blue-400 hover:text-blue-300 mt-1 inline-block\"\n            @click.prevent=\"showMetricsInfo\"\n          >\n            {{ $t('install.settings.learnMoreAboutData') }}\n          </a>\n        </div>\n        <ToggleSwitch v-model=\"allowMetrics\" />\n      </div>\n    </div>\n\n    <!-- Info Dialog -->\n    <Dialog\n      v-model:visible=\"showDialog\"\n      modal\n      :header=\"$t('install.settings.dataCollectionDialog.title')\"\n    >\n      <div class=\"text-neutral-300\">\n        <h4 class=\"font-medium mb-2\">\n          {{ $t('install.settings.dataCollectionDialog.whatWeCollect') }}\n        </h4>\n        <ul class=\"list-disc pl-6 space-y-1\">\n          <li>\n            {{\n              $t('install.settings.dataCollectionDialog.collect.errorReports')\n            }}\n          </li>\n          <li>\n            {{ $t('install.settings.dataCollectionDialog.collect.systemInfo') }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.collect.userJourneyEvents'\n              )\n            }}\n          </li>\n        </ul>\n\n        <h4 class=\"font-medium mt-4 mb-2\">\n          {{ $t('install.settings.dataCollectionDialog.whatWeDoNotCollect') }}\n        </h4>\n        <ul class=\"list-disc pl-6 space-y-1\">\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.personalInformation'\n              )\n            }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.workflowContents'\n              )\n            }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.fileSystemInformation'\n              )\n            }}\n          </li>\n          <li>\n            {{\n              $t(\n                'install.settings.dataCollectionDialog.doNotCollect.customNodeConfigurations'\n              )\n            }}\n          </li>\n        </ul>\n\n        <div class=\"mt-4\">\n          <a\n            href=\"https://comfy.org/privacy\"\n            target=\"_blank\"\n            class=\"text-blue-400 hover:text-blue-300 underline\"\n          >\n            {{ $t('install.settings.dataCollectionDialog.viewFullPolicy') }}\n          </a>\n        </div>\n      </div>\n    </Dialog>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Dialog from 'primevue/dialog'\nimport Divider from 'primevue/divider'\nimport ToggleSwitch from 'primevue/toggleswitch'\nimport { ref } from 'vue'\n\nconst showDialog = ref(false)\nconst autoUpdate = defineModel<boolean>('autoUpdate', { required: true })\nconst allowMetrics = defineModel<boolean>('allowMetrics', { required: true })\n\nconst showMetricsInfo = () => {\n  showDialog.value = true\n}\n</script>\n","export default \"__VITE_PUBLIC_ASSET__fe43f3f5__\"","export default \"__VITE_PUBLIC_ASSET__2bae65e3__\"","export default \"__VITE_PUBLIC_ASSET__57befc1b__\"","<template>\n  <div class=\"flex flex-col gap-6 w-[600px] h-[30rem] select-none\">\n    <!-- Installation Path Section -->\n    <div class=\"grow flex flex-col gap-4 text-neutral-300\">\n      <h2 class=\"text-2xl font-semibold text-neutral-100\">\n        {{ $t('install.gpuSelection.selectGpu') }}\n      </h2>\n\n      <p class=\"m-1 text-neutral-400\">\n        {{ $t('install.gpuSelection.selectGpuDescription') }}:\n      </p>\n\n      <!-- GPU Selection buttons -->\n      <div\n        class=\"flex gap-2 text-center transition-opacity\"\n        :class=\"{ selected: selected }\"\n      >\n        <!-- NVIDIA -->\n        <div\n          v-if=\"platform !== 'darwin'\"\n          class=\"gpu-button\"\n          :class=\"{ selected: selected === 'nvidia' }\"\n          role=\"button\"\n          @click=\"pickGpu('nvidia')\"\n        >\n          <img\n            class=\"m-12\"\n            alt=\"NVIDIA logo\"\n            width=\"196\"\n            height=\"32\"\n            src=\"/assets/images/nvidia-logo.svg\"\n          />\n        </div>\n        <!-- MPS -->\n        <div\n          v-if=\"platform === 'darwin'\"\n          class=\"gpu-button\"\n          :class=\"{ selected: selected === 'mps' }\"\n          role=\"button\"\n          @click=\"pickGpu('mps')\"\n        >\n          <img\n            class=\"rounded-lg hover-brighten\"\n            alt=\"Apple Metal Performance Shaders Logo\"\n            width=\"292\"\n            ratio\n            src=\"/assets/images/apple-mps-logo.png\"\n          />\n        </div>\n        <!-- Manual configuration -->\n        <div\n          class=\"gpu-button\"\n          :class=\"{ selected: selected === 'unsupported' }\"\n          role=\"button\"\n          @click=\"pickGpu('unsupported')\"\n        >\n          <img\n            class=\"m-12\"\n            alt=\"Manual configuration\"\n            width=\"196\"\n            src=\"/assets/images/manual-configuration.svg\"\n          />\n        </div>\n      </div>\n\n      <!-- Details on selected GPU -->\n      <p v-if=\"selected === 'nvidia'\" class=\"m-1\">\n        <Tag icon=\"pi pi-check\" severity=\"success\" :value=\"'CUDA'\" />\n        {{ $t('install.gpuSelection.nvidiaDescription') }}\n      </p>\n\n      <p v-if=\"selected === 'mps'\" class=\"m-1\">\n        <Tag icon=\"pi pi-check\" severity=\"success\" :value=\"'MPS'\" />\n        {{ $t('install.gpuSelection.mpsDescription') }}\n      </p>\n\n      <div v-if=\"selected === 'unsupported'\" class=\"text-neutral-300\">\n        <p class=\"m-1\">\n          <Tag\n            icon=\"pi pi-exclamation-triangle\"\n            severity=\"warn\"\n            :value=\"t('icon.exclamation-triangle')\"\n          />\n          {{ $t('install.gpuSelection.customSkipsPython') }}\n        </p>\n\n        <ul>\n          <li>\n            <strong>\n              {{ $t('install.gpuSelection.customComfyNeedsPython') }}\n            </strong>\n          </li>\n          <li>{{ $t('install.gpuSelection.customManualVenv') }}</li>\n          <li>{{ $t('install.gpuSelection.customInstallRequirements') }}</li>\n          <li>{{ $t('install.gpuSelection.customMayNotWork') }}</li>\n        </ul>\n      </div>\n\n      <div v-if=\"selected === 'cpu'\">\n        <p class=\"m-1\">\n          <Tag\n            icon=\"pi pi-exclamation-triangle\"\n            severity=\"warn\"\n            :value=\"t('icon.exclamation-triangle')\"\n          ></Tag>\n          {{ $t('install.gpuSelection.cpuModeDescription') }}\n        </p>\n        <p class=\"m-1\">\n          {{ $t('install.gpuSelection.cpuModeDescription2') }}\n        </p>\n      </div>\n    </div>\n\n    <div\n      class=\"transition-opacity flex gap-3 h-0\"\n      :class=\"{\n        'opacity-40': selected && selected !== 'cpu'\n      }\"\n    >\n      <ToggleSwitch\n        v-model=\"cpuMode\"\n        inputId=\"cpu-mode\"\n        class=\"-translate-y-40\"\n      />\n      <label for=\"cpu-mode\" class=\"select-none\">\n        {{ $t('install.gpuSelection.enableCpuMode') }}\n      </label>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { TorchDeviceType } from '@comfyorg/comfyui-electron-types'\nimport Tag from 'primevue/tag'\nimport ToggleSwitch from 'primevue/toggleswitch'\nimport { computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { electronAPI } from '@/utils/envUtil'\n\nconst { t } = useI18n()\n\nconst cpuMode = computed({\n  get: () => selected.value === 'cpu',\n  set: (value) => {\n    selected.value = value ? 'cpu' : null\n  }\n})\nconst selected = defineModel<TorchDeviceType>('device', {\n  required: true\n})\n\nconst electron = electronAPI()\nconst platform = electron.getPlatform()\n\nconst pickGpu = (value: typeof selected.value) => {\n  const newValue = selected.value === value ? null : value\n  selected.value = newValue\n}\n</script>\n\n<style scoped>\n.p-tag {\n  --p-tag-gap: 0.5rem;\n}\n\n.hover-brighten {\n  @apply transition-colors;\n  transition-property: filter, box-shadow;\n\n  &:hover {\n    filter: brightness(107%) contrast(105%);\n    box-shadow: 0 0 0.25rem #ffffff79;\n  }\n}\n.p-accordioncontent-content {\n  @apply bg-neutral-900 rounded-lg transition-colors;\n}\n\ndiv.selected {\n  .gpu-button:not(.selected) {\n    @apply opacity-50 hover:opacity-100;\n  }\n}\n\n.gpu-button {\n  @apply w-1/2 m-0 cursor-pointer rounded-lg flex flex-col items-center justify-around bg-neutral-800 bg-opacity-50 hover:bg-opacity-75 transition-colors;\n\n  &.selected {\n    @apply opacity-100 bg-neutral-700 bg-opacity-50 hover:bg-opacity-60;\n  }\n}\n\n.disabled {\n  @apply pointer-events-none opacity-40;\n}\n\n.p-card-header {\n  @apply text-center grow;\n}\n\n.p-card-body {\n  @apply text-center pt-0;\n}\n</style>\n","<template>\n  <div class=\"flex flex-col gap-6 w-[600px]\">\n    <!-- Installation Path Section -->\n    <div class=\"flex flex-col gap-4\">\n      <h2 class=\"text-2xl font-semibold text-neutral-100\">\n        {{ $t('install.chooseInstallationLocation') }}\n      </h2>\n\n      <p class=\"text-neutral-400 my-0\">\n        {{ $t('install.installLocationDescription') }}\n      </p>\n\n      <div class=\"flex gap-2\">\n        <IconField class=\"flex-1\">\n          <InputText\n            v-model=\"installPath\"\n            class=\"w-full\"\n            :class=\"{ 'p-invalid': pathError }\"\n            @update:modelValue=\"validatePath\"\n          />\n          <InputIcon\n            class=\"pi pi-info-circle\"\n            v-tooltip=\"$t('install.installLocationTooltip')\"\n          />\n        </IconField>\n        <Button icon=\"pi pi-folder\" @click=\"browsePath\" class=\"w-12\" />\n      </div>\n\n      <Message v-if=\"pathError\" severity=\"error\" class=\"whitespace-pre-line\">\n        {{ pathError }}\n      </Message>\n      <Message v-if=\"pathExists\" severity=\"warn\">\n        {{ $t('install.pathExists') }}\n      </Message>\n    </div>\n\n    <!-- System Paths Info -->\n    <div class=\"bg-neutral-800 p-4 rounded-lg\">\n      <h3 class=\"text-lg font-medium mt-0 mb-3 text-neutral-100\">\n        {{ $t('install.systemLocations') }}\n      </h3>\n      <div class=\"flex flex-col gap-2\">\n        <div class=\"flex items-center gap-2\">\n          <i class=\"pi pi-folder text-neutral-400\" />\n          <span class=\"text-neutral-400\">App Data:</span>\n          <span class=\"text-neutral-200\">{{ appData }}</span>\n          <span\n            class=\"pi pi-info-circle\"\n            v-tooltip=\"$t('install.appDataLocationTooltip')\"\n          ></span>\n        </div>\n        <div class=\"flex items-center gap-2\">\n          <i class=\"pi pi-desktop text-neutral-400\" />\n          <span class=\"text-neutral-400\">App Path:</span>\n          <span class=\"text-neutral-200\">{{ appPath }}</span>\n          <span\n            class=\"pi pi-info-circle\"\n            v-tooltip=\"$t('install.appPathLocationTooltip')\"\n          ></span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport IconField from 'primevue/iconfield'\nimport InputIcon from 'primevue/inputicon'\nimport InputText from 'primevue/inputtext'\nimport Message from 'primevue/message'\nimport { onMounted, ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { electronAPI } from '@/utils/envUtil'\n\nconst { t } = useI18n()\n\nconst installPath = defineModel<string>('installPath', { required: true })\nconst pathError = defineModel<string>('pathError', { required: true })\nconst pathExists = ref(false)\nconst appData = ref('')\nconst appPath = ref('')\n\nconst electron = electronAPI()\n\n// Get system paths on component mount\nonMounted(async () => {\n  const paths = await electron.getSystemPaths()\n  appData.value = paths.appData\n  appPath.value = paths.appPath\n  installPath.value = paths.defaultInstallPath\n\n  await validatePath(paths.defaultInstallPath)\n})\n\nconst validatePath = async (path: string) => {\n  try {\n    pathError.value = ''\n    pathExists.value = false\n    const validation = await electron.validateInstallPath(path)\n\n    // Create a pre-formatted list of errors\n    if (!validation.isValid) {\n      const errors: string[] = []\n      if (validation.cannotWrite) errors.push(t('install.cannotWrite'))\n      if (validation.freeSpace < validation.requiredSpace) {\n        const requiredGB = validation.requiredSpace / 1024 / 1024 / 1024\n        errors.push(`${t('install.insufficientFreeSpace')}: ${requiredGB} GB`)\n      }\n      if (validation.parentMissing) errors.push(t('install.parentMissing'))\n      if (validation.error)\n        errors.push(`${t('install.unhandledError')}: ${validation.error}`)\n      pathError.value = errors.join('\\n')\n    }\n\n    // Display the path exists warning\n    if (validation.exists) pathExists.value = true\n  } catch (error) {\n    pathError.value = t('install.pathValidationFailed')\n  }\n}\n\nconst browsePath = async () => {\n  try {\n    const result = await electron.showDirectoryPicker()\n    if (result) {\n      installPath.value = result\n      await validatePath(result)\n    }\n  } catch (error) {\n    pathError.value = t('install.failedToSelectDirectory')\n  }\n}\n</script>\n","<template>\n  <div class=\"flex flex-col gap-6 w-[600px]\">\n    <!-- Source Location Section -->\n    <div class=\"flex flex-col gap-4\">\n      <h2 class=\"text-2xl font-semibold text-neutral-100\">\n        {{ $t('install.migrateFromExistingInstallation') }}\n      </h2>\n\n      <p class=\"text-neutral-400 my-0\">\n        {{ $t('install.migrationSourcePathDescription') }}\n      </p>\n\n      <div class=\"flex gap-2\">\n        <InputText\n          v-model=\"sourcePath\"\n          placeholder=\"Select existing ComfyUI installation (optional)\"\n          class=\"flex-1\"\n          :class=\"{ 'p-invalid': pathError }\"\n          @update:modelValue=\"validateSource\"\n        />\n        <Button icon=\"pi pi-folder\" @click=\"browsePath\" class=\"w-12\" />\n      </div>\n\n      <Message v-if=\"pathError\" severity=\"error\">\n        {{ pathError }}\n      </Message>\n    </div>\n\n    <!-- Migration Options -->\n    <div\n      v-if=\"isValidSource\"\n      class=\"flex flex-col gap-4 bg-neutral-800 p-4 rounded-lg\"\n    >\n      <h3 class=\"text-lg mt-0 font-medium text-neutral-100\">\n        {{ $t('install.selectItemsToMigrate') }}\n      </h3>\n\n      <div class=\"flex flex-col gap-3\">\n        <div\n          v-for=\"item in migrationItems\"\n          :key=\"item.id\"\n          class=\"flex items-center gap-3 p-2 hover:bg-neutral-700 rounded\"\n          @click=\"item.selected = !item.selected\"\n        >\n          <Checkbox\n            v-model=\"item.selected\"\n            :inputId=\"item.id\"\n            :binary=\"true\"\n            @click.stop\n          />\n          <div>\n            <label :for=\"item.id\" class=\"text-neutral-200 font-medium\">\n              {{ item.label }}\n            </label>\n            <p class=\"text-sm text-neutral-400 my-1\">\n              {{ item.description }}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Skip Migration -->\n    <div v-else class=\"text-neutral-400 italic\">\n      {{ $t('install.migrationOptional') }}\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { MigrationItems } from '@comfyorg/comfyui-electron-types'\nimport Button from 'primevue/button'\nimport Checkbox from 'primevue/checkbox'\nimport InputText from 'primevue/inputtext'\nimport Message from 'primevue/message'\nimport { computed, ref, watchEffect } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { electronAPI } from '@/utils/envUtil'\n\nconst { t } = useI18n()\n\nconst electron = electronAPI()\n\nconst sourcePath = defineModel<string>('sourcePath', { required: false })\nconst migrationItemIds = defineModel<string[]>('migrationItemIds', {\n  required: false\n})\n\nconst migrationItems = ref(\n  MigrationItems.map((item) => ({\n    ...item,\n    selected: true\n  }))\n)\n\nconst pathError = ref('')\nconst isValidSource = computed(\n  () => sourcePath.value !== '' && pathError.value === ''\n)\n\nconst validateSource = async (sourcePath: string) => {\n  if (!sourcePath) {\n    pathError.value = ''\n    return\n  }\n\n  try {\n    pathError.value = ''\n    const validation = await electron.validateComfyUISource(sourcePath)\n\n    if (!validation.isValid) pathError.value = validation.error\n  } catch (error) {\n    console.error(error)\n    pathError.value = t('install.pathValidationFailed')\n  }\n}\n\nconst browsePath = async () => {\n  try {\n    const result = await electron.showDirectoryPicker()\n    if (result) {\n      sourcePath.value = result\n      await validateSource(result)\n    }\n  } catch (error) {\n    console.error(error)\n    pathError.value = t('install.failedToSelectDirectory')\n  }\n}\n\nwatchEffect(() => {\n  migrationItemIds.value = migrationItems.value\n    .filter((item) => item.selected)\n    .map((item) => item.id)\n})\n</script>\n","<template>\n  <BaseViewTemplate dark>\n    <!-- h-full to make sure the stepper does not layout shift between steps\n    as for each step the stepper height is different. Inherit the center element\n    placement from BaseViewTemplate would cause layout shift. -->\n    <Stepper\n      class=\"h-full p-8 2xl:p-16\"\n      value=\"0\"\n      @update:value=\"handleStepChange\"\n    >\n      <StepList class=\"select-none\">\n        <Step value=\"0\">\n          {{ $t('install.gpu') }}\n        </Step>\n        <Step value=\"1\" :disabled=\"noGpu\">\n          {{ $t('install.installLocation') }}\n        </Step>\n        <Step value=\"2\" :disabled=\"noGpu || hasError || highestStep < 1\">\n          {{ $t('install.migration') }}\n        </Step>\n        <Step value=\"3\" :disabled=\"noGpu || hasError || highestStep < 2\">\n          {{ $t('install.desktopSettings') }}\n        </Step>\n      </StepList>\n      <StepPanels>\n        <StepPanel value=\"0\" v-slot=\"{ activateCallback }\">\n          <GpuPicker v-model:device=\"device\" />\n          <div class=\"flex pt-6 justify-end\">\n            <Button\n              :label=\"$t('g.next')\"\n              icon=\"pi pi-arrow-right\"\n              iconPos=\"right\"\n              @click=\"activateCallback('1')\"\n              :disabled=\"typeof device !== 'string'\"\n            />\n          </div>\n        </StepPanel>\n        <StepPanel value=\"1\" v-slot=\"{ activateCallback }\">\n          <InstallLocationPicker\n            v-model:installPath=\"installPath\"\n            v-model:pathError=\"pathError\"\n          />\n          <div class=\"flex pt-6 justify-between\">\n            <Button\n              :label=\"$t('g.back')\"\n              severity=\"secondary\"\n              icon=\"pi pi-arrow-left\"\n              @click=\"activateCallback('0')\"\n            />\n            <Button\n              :label=\"$t('g.next')\"\n              icon=\"pi pi-arrow-right\"\n              iconPos=\"right\"\n              @click=\"activateCallback('2')\"\n              :disabled=\"pathError !== ''\"\n            />\n          </div>\n        </StepPanel>\n        <StepPanel value=\"2\" v-slot=\"{ activateCallback }\">\n          <MigrationPicker\n            v-model:sourcePath=\"migrationSourcePath\"\n            v-model:migrationItemIds=\"migrationItemIds\"\n          />\n          <div class=\"flex pt-6 justify-between\">\n            <Button\n              :label=\"$t('g.back')\"\n              severity=\"secondary\"\n              icon=\"pi pi-arrow-left\"\n              @click=\"activateCallback('1')\"\n            />\n            <Button\n              :label=\"$t('g.next')\"\n              icon=\"pi pi-arrow-right\"\n              iconPos=\"right\"\n              @click=\"activateCallback('3')\"\n            />\n          </div>\n        </StepPanel>\n        <StepPanel value=\"3\" v-slot=\"{ activateCallback }\">\n          <DesktopSettingsConfiguration\n            v-model:autoUpdate=\"autoUpdate\"\n            v-model:allowMetrics=\"allowMetrics\"\n          />\n          <div class=\"flex pt-6 justify-between\">\n            <Button\n              :label=\"$t('g.back')\"\n              severity=\"secondary\"\n              icon=\"pi pi-arrow-left\"\n              @click=\"activateCallback('2')\"\n            />\n            <Button\n              :label=\"$t('g.install')\"\n              icon=\"pi pi-check\"\n              iconPos=\"right\"\n              :disabled=\"hasError\"\n              @click=\"install()\"\n            />\n          </div>\n        </StepPanel>\n      </StepPanels>\n    </Stepper>\n  </BaseViewTemplate>\n</template>\n\n<script setup lang=\"ts\">\nimport type {\n  InstallOptions,\n  TorchDeviceType\n} from '@comfyorg/comfyui-electron-types'\nimport Button from 'primevue/button'\nimport Step from 'primevue/step'\nimport StepList from 'primevue/steplist'\nimport StepPanel from 'primevue/steppanel'\nimport StepPanels from 'primevue/steppanels'\nimport Stepper from 'primevue/stepper'\nimport { computed, onMounted, ref, toRaw } from 'vue'\nimport { useRouter } from 'vue-router'\n\nimport DesktopSettingsConfiguration from '@/components/install/DesktopSettingsConfiguration.vue'\nimport GpuPicker from '@/components/install/GpuPicker.vue'\nimport InstallLocationPicker from '@/components/install/InstallLocationPicker.vue'\nimport MigrationPicker from '@/components/install/MigrationPicker.vue'\nimport { electronAPI } from '@/utils/envUtil'\nimport BaseViewTemplate from '@/views/templates/BaseViewTemplate.vue'\n\nconst device = ref<TorchDeviceType>(null)\n\nconst installPath = ref('')\nconst pathError = ref('')\n\nconst migrationSourcePath = ref('')\nconst migrationItemIds = ref<string[]>([])\n\nconst autoUpdate = ref(true)\nconst allowMetrics = ref(true)\n\n/** Forces each install step to be visited at least once. */\nconst highestStep = ref(0)\n\nconst handleStepChange = (value: string | number) => {\n  setHighestStep(value)\n\n  electronAPI().Events.trackEvent('install_stepper_change', {\n    step: value\n  })\n}\n\nconst setHighestStep = (value: string | number) => {\n  const int = typeof value === 'number' ? value : parseInt(value, 10)\n  if (!isNaN(int) && int > highestStep.value) highestStep.value = int\n}\n\nconst hasError = computed(() => pathError.value !== '')\nconst noGpu = computed(() => typeof device.value !== 'string')\n\nconst electron = electronAPI()\nconst router = useRouter()\nconst install = () => {\n  const options: InstallOptions = {\n    installPath: installPath.value,\n    autoUpdate: autoUpdate.value,\n    allowMetrics: allowMetrics.value,\n    migrationSourcePath: migrationSourcePath.value,\n    migrationItemIds: toRaw(migrationItemIds.value),\n    device: device.value\n  }\n  electron.installComfyUI(options)\n\n  const nextPage =\n    options.device === 'unsupported' ? '/manual-configuration' : '/server-start'\n  router.push(nextPage)\n}\n\nonMounted(async () => {\n  if (!electron) return\n\n  const detectedGpu = await electron.Config.getDetectedGpu()\n  if (detectedGpu === 'mps' || detectedGpu === 'nvidia') {\n    device.value = detectedGpu\n  }\n\n  electronAPI().Events.trackEvent('install_stepper_change', {\n    step: '0',\n    gpu: detectedGpu\n  })\n})\n</script>\n\n<style scoped>\n:deep(.p-steppanel) {\n  @apply bg-transparent;\n}\n</style>\n"],"names":["_useModel","sourcePath"],"mappings":"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"}